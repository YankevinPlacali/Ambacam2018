package com.ambacam;

import com.ambacam.model.Action;
import com.ambacam.model.Role;
import com.ambacam.model.StatusRequete;
import io.restassured.RestAssured;
import org.junit.runner.RunWith;
import org.springframework.boot.context.embedded.LocalServerPort;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;
import org.springframework.test.context.junit4.SpringRunner;

<<<<<<< 45045f509d6e609530717571a184e31d2addf7a8
import com.ambacam.model.MotifSuppression;
import com.ambacam.model.Role;
import com.ambacam.model.StatusRequete;

import io.restassured.RestAssured;
=======
import java.util.Random;
>>>>>>>  #24 implementer-les-endpoints-de-l-objet-action

@RunWith(SpringRunner.class)
@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)
public class ItBase {
    protected Random random = new Random();

    @LocalServerPort
    protected int port;

    public void setup() throws Exception {
        RestAssured.port = port;

    }

    public void cleanup() throws Exception {

    }

    protected Role buildRole() {

        Role role = new Role().nom("nom-" + random.nextLong()).description("description-" + random.nextLong());
        return role;
    }

    protected StatusRequete buildStatusRequete() {

        StatusRequete statusRequete = new StatusRequete().nom("nom-" + random.nextLong())
                .description("description-" + random.nextLong());
        return statusRequete;
    }

    protected Action buildAction() {

<<<<<<< 45045f509d6e609530717571a184e31d2addf7a8
		StatusRequete statusRequete = new StatusRequete().nom("nom-" + random.nextLong())
				.description("description-" + random.nextLong());
		return statusRequete;
	}

	protected MotifSuppression buildMotifSuppression() {

		MotifSuppression motifSuppression = new MotifSuppression().nom("nom-" + random.nextLong())
				.description("description-" + random.nextLong());
		return motifSuppression;
	}
=======
        Action action = new Action().nom("nom-" + random.nextLong()).description("description-" + random.nextLong());
        return action;
    }
>>>>>>>  #24 implementer-les-endpoints-de-l-objet-action
}
